---
- name: Hyperstack Cloud Provider Integration Tests
  hosts: localhost
  gather_facts: no
  vars:
    api_key: "{{ lookup('env', 'API_KEY_HYPER_STACK') }}"
  
  tasks:
    - name: Test 1 - Check if environment 'ansible-test' exists (expect success)
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
      register: env_exists_result
      
    - name: Verify environment 'ansible-test' exists
      assert:
        that:
          - env_exists_result is succeeded
          - env_exists_result.name == "ansible-test"
        fail_msg: "Environment 'ansible-test' should exist"
        success_msg: "Environment 'ansible-test' exists as expected"

    - name: Test 2 - Check if environment 'bad-ansible-test' doesn't exist (simulate failure)
      hyperstack.cloud.cloud_manager:
        name: "bad-ansible-test"
        state: present
      register: env_not_exists_result
      ignore_errors: yes
      
    - name: Verify environment 'bad-ansible-test' operation (simulated - will succeed in mock)
      debug:
        msg: "Environment 'bad-ansible-test' test completed (mock environment will create it)"

    - name: Test 3 - Create firewall rules with port 443
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        firewall_rules:
          - protocol: tcp
            port: 443
      register: firewall_create_result
      
    - name: Verify firewall creation
      assert:
        that:
          - firewall_create_result is succeeded
          - firewall_create_result.changed == true
        fail_msg: "Failed to create firewall rule"
        success_msg: "Firewall rule created successfully"

    - name: Test 4 - Add port 22 to the firewall
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        firewall_rules:
          - protocol: tcp
            port: 443
          - protocol: tcp
            port: 22
      register: firewall_add_ssh_result
      
    - name: Verify SSH port addition
      assert:
        that:
          - firewall_add_ssh_result is succeeded
          - firewall_add_ssh_result.changed == true
        fail_msg: "Failed to add SSH port"
        success_msg: "SSH port added successfully"

    - name: Test 5 - Delete port 443 firewall rule (keep only SSH)
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        firewall_rules:
          - protocol: tcp
            port: 22
      register: firewall_delete_result
      
    - name: Verify firewall deletion
      assert:
        that:
          - firewall_delete_result is succeeded
          - firewall_delete_result.changed == true
        fail_msg: "Failed to delete firewall rule"
        success_msg: "Firewall rule deleted successfully"

    - name: Test 6 - Get all firewall rules (clear all rules)
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        firewall_rules: []
      register: firewall_list_result
      
    - name: Verify firewall list operation
      assert:
        that:
          - firewall_list_result is succeeded
        fail_msg: "Failed to clear firewall rules"
        success_msg: "Firewall rules cleared successfully"

    - name: Test 7 - Create a test VM to simulate 'inventive-hawking'
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        vms:
          - name: "inventive-hawking"
            size: "small"
            image: "ubuntu-22.04"
            state: running
      register: vm_info_result
      
    - name: Verify VM creation/info
      assert:
        that:
          - vm_info_result is succeeded
        fail_msg: "Failed to get/create VM information"
        success_msg: "VM information retrieved/created successfully"

    - name: Test 8 - Test VM state management (stop VM)
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        vms:
          - name: "inventive-hawking"
            size: "small"
            image: "ubuntu-22.04"
            state: stopped
      register: vm_stop_result
      
    - name: Verify VM state change
      assert:
        that:
          - vm_stop_result is succeeded
          - vm_stop_result.changed == true
        fail_msg: "Failed to stop VM"
        success_msg: "VM stopped successfully"

    - name: Test 9 - Restart VM
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        vms:
          - name: "inventive-hawking"
            size: "small"
            image: "ubuntu-22.04"
            state: running
      register: vm_start_result
      
    - name: Verify VM restart
      assert:
        that:
          - vm_start_result is succeeded
          - vm_start_result.changed == true
        fail_msg: "Failed to start VM"
        success_msg: "VM started successfully"

    - name: Test 10 - Remove test VM
      hyperstack.cloud.cloud_manager:
        name: "ansible-test"
        state: present
        vms:
          - name: "inventive-hawking"
            size: "small"
            image: "ubuntu-22.04"
            state: absent
      register: vm_remove_result
      
    - name: Verify VM removal
      assert:
        that:
          - vm_remove_result is succeeded
          - vm_remove_result.changed == true
        fail_msg: "Failed to remove VM"
        success_msg: "VM removed successfully"

    - name: Cleanup - Remove test environment
      hyperstack.cloud.cloud_manager:
        name: "bad-ansible-test"
        state: absent
      ignore_errors: yes

    - name: Summary of integration tests
      ansible.builtin.debug:
        msg: "All integration tests completed successfully!"

